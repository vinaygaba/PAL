import ("stdlib.pal");

/*In this code snippet, we will read text from a .txt file, render text from the first two pages in a column layout
on the first page of the pdf. The text file contains a table on the 2nd page which we will read and convert to a
bar chart and a pie chart and render these charts on the 2nd page of our pdf. The text that follows this table in the .txt
file will be rendered in a column layout on the pdf. We will then split the rendered pdf into two pdfs, one with all the text
and one with the charts.
*/

main()
{


  pdfVar : pdf;



  #read text from first two pages of raw pdf and render in column layout on output pdf
  textpagenumbers : list int(1,2);

  filepath : string = "input.pdf";

  content : string = readtextfrompdf(filepath,textpagenumbers);

  pdfVar = write_pages(content, 12, "COURIER_OBLIQUE", "TWO_COLUMN");





  #read table from raw pdf and convert to bar chart
  table : list list string;
  tablepagenumbers : list int(3);

  table = readtable(filepath,tablepagenumbers);

  properties : map string,string;

  properties += "ChartTitle","PLT Assignment 3 Statistics";
  properties += "Height","250";
  properties += "Width","300";
  properties += "X","150";
  properties += "Y","500";
  
  chartimage : image;

  chartimage = drawbarchart(table,properties);
  pageVar : page;

  #Add page to pdf
  pdfVar = pdfVar . pageVar;

  tupleVar : tuple(pdfVar, pageVar);

  tupleVar = tupleVar . chartimage;




  #read table from raw pdf and convert to pie chart chart
  
  properties += "X","200";
  properties += "Y","100";

  chartimage = drawpiechart(table,properties);

  tupleVar = tupleVar . chartimage;





  #read page 3 form raw pdf and write exactly one page in 3 column layout on output pdf

  pagenumbers : list int(4);
  content = readtextfrompdf(filepath,pagenumbers);

  pageforthreecolumnlayout : page;
  pdfVar = pdfVar . pageforthreecolumnlayout;
  texttuple : tuple(pdfVar, pageforthreecolumnlayout);

  content = write_three_column_layout(texttuple, content, "HELVETICA", 12);
  
  renderpdf(pdfVar,"finaldemooutput.pdf");





  #load rendered pdf and split at page numbers 4 and 5. Expected: All two column layout pages
  #go in the first split, the image page in the 2nd split and the 3 column layout in the
  #third split

  pdfVar = loadpdf("finaldemooutput.pdf");

  pdfs : list pdf;

  splitnumbers : list int(4,5);

  pdfs = split(pdfVar, splitnumbers);

  i: int;

  lengthoflist : int;
  lengthoflist = length(pdfs);

  for(i = 0 ; i < lengthoflist; i = i + 1)
  {
    renderpdf(pdfs[i],"split"+i+".pdf");
  }


}
